基于JDK1.8解析：
JDK 8 版本说明 ： https://www.oracle.com/technetwork/cn/java/javase/8-whats-new-2157071-zhs.html?printOnly=1	
JDK基础概念及目录结构:https://blog.csdn.net/qq_38989725/article/details/76136117
	JDK(Java Development Kit) 是整个JAVA的核心，包括了Java运行环境（Java Runtime Envirnment），一堆Java工具（javac/java/jdb等）和Java基础的类库（即Java API 包括rt.jar）。 
	目录结构：
		bin目录：Java工具的可执行文件，包括: java、Java编译器javac、反编译.class文件javap、密钥管理工具keytool、Java文档工具javadoc等。
		COPYRIGHT文件：版权信息。
		db目录：Java实现的数据库。
		include目录：.h头文件，C语言开发时用到的头文件。比如jni.h是开发jni程序时必须引用的头文件。
		lib目录： Java类库，我们经常看到的dt.jar和tools.jar就在这个目录下。
			dt.jar包含了Swing包，是运行环境的类库。目前的发展趋势是Java越来越少的用作GUI开发，所以这个类库基本不会用到了。
			tools.jar是工具类库，bin目录下的可执行程序，好多都会用到这个类库。比如javac[.exe]，javadoc[.exe]等。
		src.zip文件：Java类库源码，包括了rt.jar库中的关键部分；除了Java类库，还包含了启动器（launcher）的源码（C语言实现）。
		jre目录：Java运行环境。		
		THIRDPARTY******:第三方：ASM Bytecode Manipulation Framework v5.0.3/BSDiff v4.3/CodeViewer 1.0/Cryptix AES 3.2.0/CUP Parser Generator for Java 0.10k/Document Object Model (DOM) Level 2& 3/
						Dynalink v0.5/Elliptic Curve Cryptography/ECMAScript Language Specification ECMA-262 Edition 5.1/Dynalink library/FontConfig 2.5/IAIK PKCS#11 Wrapper/
						ICU4C 4.0.1 and ICU4J 4.4/IJG JPEG 6b/Joni v1.1.9/JOpt-Simple v3.0/Kerberos functionality/Kerberos functionality from FundsXpress/Kronos OpenGL headers/
						libpng 1.6.16/GIFLIB 5.1.1 & libungif 4.1.3/Little CMS 2.7/Mesa 3D Graphics Library v4.1/Mozilla Network Security Services (NSS)/PC/SC Lite for Suse Linux v.1.1.1/
						PorterStemmer v4/Relax NG Object/Parser v.20050510/RelaxNGCC v1.12/SAX 2.0.1/SoftFloat version 2b/Sparkle 1.5/Thai Dictionary/Unicode 6.2.0 & CLDR 21.0.1/UPX v3.01/
						Xfree86-VidMode Extension 1.0/X Window System 6.8.2/zlib v1.2.8/Apache Commons Math 3.2/Apache Derby 10.11.1.2/Apache Jakarta BCEL 5.1 /Apache Jakarta Regexp 1.4 /
						Apache Santuario XML Security for Java 1.5.4/ Apache Xalan-Java 2.7.1 / Apache Xerces Java 2.10.0 /Apache XML Resolver 1.1 /Dynalink 0.5
						
JRE（Java Runtime Environment，Java运行环境,JVM+Lib=JRE），包含JVM标准实现及Java核心类库。JRE是Java运行环境，并不是一个开发环境，所以没有包含任何开发工具（如编译器和调试器） 
JRE是指java运行环境。光有JVM还不能成class的 执行，因为在解释class的时候JVM需要调用解释所需要的类库lib。 （jre里有运行.class的java.exe） 
	bin目录：包含了java运行所需要的可执行文件，比如java[.exe]
	lib目录：包含了运行时依赖的java类库和动态链接库（.so或.dll或.dylib）。
		rt.jar文件是java运行时类库，是我们用到最多的基础类库，包括java.lang，java.io，java.net，java.util等。
			java.lang：Java语言包，这个包下的文件不需要显式import。包括：Object类，数据类型相关的类（String，Long，Byte），Class类，线程相关类Thread，异常类Throwable，等。
			java.io：I/O操作相关的类。包括：文件类File，FileReader，FileWriter，输入输出流InputStream/OutputStream，等。
			java.net：网络相关类。包括：http连接类HttpURLConnection，socket类，等。
			java.util：工具类。包括：数据结构相关的类ArrayList、Hashmap，日期类Date，随机数类Random，等。


JVM（Java Virtual Machine），即java虚拟机, java运行时的环境，JVM是一种用于计算设备的规范，它是一个虚构出来的计算机，是通过在实际的计算机上仿真模拟各种计算机功能来实现的。
针对java用户，也就是拥有可运行的.class文件包（jar或者war）的用户。里面主要包含了jvm和java运行时基本类库（rt.jar）。rt.jar可以简单粗暴地理解为：它就是java源码编译成的jar包。
Java虚拟机在执行字节码时，把字节码解释成具体平台上的机器指令执行。这就是Java的能够“一次编译，到处运行”的原因。


-- 模糊，抽时间看


JVM系列文章(一):Java内存区域分析
https://blog.csdn.net/u012422829/article/details/46580893

JVM系列文章(二):垃圾回收机制
https://blog.csdn.net/u012422829/article/details/46593175

JVM系列文章(三):Class文件内容解析
https://blog.csdn.net/u012422829/article/details/46633515

JVM系列文章(四):类加载机制
https://blog.csdn.net/u012422829/article/details/46648731

JVM系列文章(五):Javac编译与JIT编译
https://blog.csdn.net/u012422829/article/details/46916391

深入JVM---系列
http://www.blogjava.net/DLevin/category/48888.html

Class
https://www.jianshu.com/p/91fe893a76ea

JAVA中的栈和堆
https://www.cnblogs.com/ibelieve618/p/6380328.html