--------------------------------------------------------分割线-------------------------------项目管理------------------------------------------------
软件项目管理
https://blog.csdn.net/Tang_xSong/article/details/80548854

产品经理信息收集渠道大盘点
https://www.cnblogs.com/callmelexi/p/9038006.html
https://mp.weixin.qq.com/s?__biz=MjM5NTQ5MjIyMA==&mid=406148610&idx=3&sn=8c2c607ce1bbf871632dee138887f158&scene=1&srcid=05066piRZTjRmaDd4R4aGNQh#wechat_redirect

2018年最新完整的项目管理知识体系(干货版)（pmbok）
https://blog.csdn.net/weixin_42400743/article/details/81220244

随谈项目管理之传统和敏捷项目管理
https://www.cnblogs.com/callmelexi/p/8857536.html
1、PMP：传统型
2、SCRUM：敏捷型
3、IPD（Integrated Product Development）集成产品开发：

软件开发的11种模式
https://blog.csdn.net/xi_gua_gua/article/details/53107283
1，边做边改模型（Build-and-Fix-Model）
2，瀑布模型（Waterfall-Model）
2，瀑布模型（Waterfall-Model）
4，增量模型（Incremental-Model）
5，迭代模型（Stagewise-Model）（迭代增量式开发/迭代进化式开发）
6，螺旋模型（Spiral-Model）
7，敏捷开发模型（Agile-Development-Model）
8，演化模型（Evolutionary-Model）
9，喷泉模型（Fountain-Model）
10，智能模型（四代技术4GL）
11，混合模型（Hybrid-Model）


常用的质量管理方法论是DMAIC循环改进法——
具体过程为：定义质量问题（Define）→ 收集相关数据（Measure）→ 分析数据，发现主要原因（Analysis）→ 针对原因改进（Improve）→ 控制改进结果，不断循环（Control）。
广为人知的案例有摩托罗拉的6-sigma质量管理理念、日本丰田汽车的管理体系（Toyota System）和其精益化制造（Lean Manufacturing）的管理方法…

项目管理模式：
1、传统项目管理(PMP：Project Management Professional)
2、敏捷项目管理(Scrum)
3、集成产品开发（IPD体系：Integrated Product Development）


传统项目与敏捷项目管理对比
http://www.360doc.com/content/16/1206/10/27972427_612376435.shtml

敏捷型：
客人到餐馆来点菜（新项目）
不确定客户想吃什么的时候，通常选好餐厅后会先看看餐厅的菜单（客户往往提不出具体的需求）
根据图文菜单，客人点了是个菜（根据原型和设计稿，基本确定了需求）
后厨开始准备（项目启动）
配菜、炒菜，先上了两盘，让客人尝了尝味道（先提供可用实例给客户用）
客人说还不错，后厨继续准备后面的菜，陆续上菜（不断迭代，不断测试）
上菜过程中，客人突然发现有个菜的味道太淡了，让后厨加了点盐又端上来了（敏捷的好处，可以不断测试和需求变更）
又上了两盘，不够辣，又拿到后厨加了辣（敏捷的坏处，需求没有提前明确，反复迭代，增加了工作量）
到最后两盘时，客人要求换两个菜，还好没炒（迭代的好处，随时接受需求变更）
客人吃完，很满意（基本满足了全部的要求）

传统型：
客人到餐馆来点菜（新项目）
不确定客户想吃什么的时候，通常选好餐厅后会先看看餐厅的菜单（客户往往提不出具体的需求）
根据图文菜单，客人点了十个菜（根据原型和设计稿，基本确定了需求）
后厨开始准备（项目启动）
根据客人的下单配菜，炒菜（基本上不会主动去了解完整需求）
半个小时了，菜还没上桌，客人饿极了（项目启动后很长一段时间客户什么都看不到）
再过了二十分钟，十个菜都一起上来了（项目最终一次交付） 
客人说，有几个菜挺好的，但是有个菜味道淡了，有两个不够辣，还有两盘重复了想换掉（我是买单的，我要变需求） 
这时候大堂经理来了，说，“味道淡了可以加盐，不辣可以加辣，但是换菜不行，已经炒好的那两盘菜也是要算成本的”（瀑布的坏处，需求变更比较麻烦）
于是，后厨只给客户加了盐，加了辣
客人吃完，不是很满意，下次不来了（没有满足需求）


乱花渐欲迷人眼——如何看待PMP、CMMI、SLC与项目管理的关系
https://blog.csdn.net/yuanhuazhaoze/article/details/51260411

公司软件研发管理制度
https://www.ixiera.com/web/xinwenzixun/gongsixinwen/257.html
--------------------------------------------------------分割线-------------------------------------------------------------------------------
1、立项：市场需求分析（或者合同）、项目立项申请表、项目风险分析清单。

2、需求分析：软件需求报告或设计方案、需求规格说明书。

3、总体设计：概要设计说明书或功能模块描述。

4、详细设计：详细设计说明书，包括软件接口说明、单元测试计划。

5、软件实现：软件功能说明、源代码、源代码说明或者注释

6、产品测试：测试报告

7、产品发布：产品说明书、使用手册

8、产品维护：问题反馈记录

9、项目总结：提交客户方的项目总结和公司项目汇报的PPT


1.需求分析--产生 软件功能规格说明书,需要确定用户对软件的需求,要作到明确、无歧义。不涉及具体实现方法。用户能看得明白，开发人员也可据此进行下面的工作（概要设计）
2.概要设计--产生 软件概要设计说明书，说明系统模块划分、选择的技术路线等，整体说明软件的实现思路。并且需要指出关键技术难点等。
3.详细设计--产生 软件详细设计说明书，对概要设计的进一步细化，一般由各部分的担当人员依据概要设计分别完成，然后在集成，是具体的实现细节。理论上要求可以照此编码。


举例说明你对概要设计与详细设计的理解。有不需要概要设计的情况吗？ 
软件设计是一个把软件需求变换成软件表示的过程。
最初这种表示只是描绘出软件的总的框架，然后进一步细化，在此框架中填入细节，把它加工成在程序细节上非常接近于源程序的软件表示。
正因为如此，所以从工程管理的角度来看，软件设计分两步完成。首先做概要设计，将软件需求转化为数据结构和软件的系统结构。然后是详细设计，即过程设计。通过对结构表示进行细化，得到软件的详细的数据结构和算法。 
由于概要设计建立起整个系统的体系结构框架，并给出了系统中的全局数据结构和数据库接口，人机接口，与其它硬、软件的接口。此外还从系统全局的角度，考虑处理方式、运行方式、容错方式、以及系统维护等方面的问题，
并给出了度量和评价软件质量的方法，所以它奠定了整个系统实现的基础。没有概要设计，直接考虑程序设计，就不能从全局把握软件系统的结构和质量，实现活动处于一种无序状态，程序结构划分不合理，
导致系统处于一种不稳定的状态，稍一做改动就会失败。所以，不能没有概要设计

--------------------------------------------------------分割线-------------------------------产品需求------------------------------------------------
如何系统整理需求调研报告
https://blog.csdn.net/u012785908/article/details/80490708
需求调研报告（用户需求说明书）编写规范
https://blog.csdn.net/maguanghui_2012/article/details/46664093

需求分析：需求调研的七种方法
https://blog.csdn.net/yang_changchun/article/details/53781453
需求获取一般包括这几种方式：观察法、体验法、单据分析法、报表分析法、问卷调查法、访谈法、需求调研会法。


产品需求文档（PRD）札记
https://blog.csdn.net/xiangxizhishi/article/details/79942857
3、再谈BRD/MRD/PRD文档的区别与用途
3.1 BRD
-这么做有好处，并说明好处在哪里
– 唐僧出发前,参见唐皇（老板）,告诉唐皇西去取经的重要意义与大兴佛法的好处,唐皇答应,并发放免签护照（授权），于是唐僧带着任务出发了，那个时候唐朝真实V5啊。

3.2 MRD
-通过BRD明确了这个事情值得一做后，描述应该这么做，并说明这么做的原因
– 唐僧上路了，但是他需要选择走哪条路线，带几个人，为什么这么走，为什么带这些人，要说清楚：
>A路线：妖怪多
>B路线：神仙多
>C路线：美女多
经过分析，唐僧决定选择C路线，所以才有了三打白骨精，路过女儿国等经典故事（开个玩笑）

3.3 PRD
- 获得了授权，而且已经确定了要走的路线，剩下的就是打造装备（产品）了
– 要把装备的需求给工匠（研发人员），就需要把你（PM）对装备（产品）的要求讲清楚
>金箍棒（需要能缩短到耳朵里面，直径1毫米，长度6毫米，需要金色，重量必须控制在1KG）
>九齿钉耙（必须要9个齿，废话啊，黑色，齿长8cm，把手长1.5米，直径2.5厘米）
>于是工匠（研发人员）根据需求，打造出了旷世的武器



产品说明包含：产品信息结构、产品结构图、用户使用流程图

UML > 用例文档 > 用例图与状态图


功能结构图、信息结构图、结构图，你还傻傻分不清吗？（上）
http://www.woshipm.com/pmd/838667.html
功能结构图、信息结构图、结构图，你还傻傻分不清吗？（下）
http://www.woshipm.com/pmd/844937.html

1：功能结构图
    功能结构图就是以功能模块为类别，介绍模块下其各功能组成的图表。
2：信息结构图（注重用户体验）
	定义：指脱离产品的实际页面，将产品的数据抽象出来，组合分类的图表。
	作用：
	帮助PM梳理复杂内容的信息组成，避免信息内容在展示过程中出现遗漏、混乱、重复；
	作为开发工程师建立数据库的参考依据；
3：产品结构图

需求文档(PRD文档)
https://blog.csdn.net/zhangbijun1230/article/details/79451874

http://www.woshipm.com/pmd/1069816.html
以用户体验五要素的思路，如何编写产品需求文档（PRD）

"产品需求文档"相关的文章
http://www.woshipm.com/tag/%E4%BA%A7%E5%93%81%E9%9C%80%E6%B1%82%E6%96%87%E6%A1%A3

盒马鲜生APP产品需求文档
https://sekb0c.axshare.com/#g=1



https://www.zhihu.com/question/19655491
BRD 商业需求文档 Business Requirement Document 
MRD 市场需求文档 Market Requirement Document
PRD 产品需求文档 Product Requirement Document

Business商业、Market市场、Product产品；那么这三个是什么关系呢？BRD是产品的head、MRD是产品的body、PRD是产品的Heart，有了Head、Body、Heart这就是一个完整的产品了！

模块--->类和对象--->组件


【用户需求说明书】和【需求规格说明书】的区别
https://www.cnblogs.com/dfdfding/articles/4043175.html
需求分析报告：一般是对某个市场或者是客户群来讲的，类似于调研报告，重点是体现出产品要满足哪些功能，哪些是重点、热点。 
需求说明书：是根据与现场实际客户进行沟通，把客户的需求进行整理，CMMI中有标准的模板，重点是站在客户的角度讲产品功能。 
需求规格说明书：是从业务规则讲起的，细一点偏向于软件的概要设计。是从开发、测试的角度去讲产品功能，里面要包含原型界面、业务接口、活动图等。

需求开发和需求管理过程().pdf
https://max.book118.com/html/2018/0825/6043242114001213.shtm
需求阶段的工作主要分为两个方面，为“需求开发”和“需求管理”。
从我们的经验来讲 
“需求管理”需要产出的文档大体上包含【需求管理计划、需求检查表、需求跟踪表（包含矩阵图）、需求变更状态跟踪表，以及与其配套产出的指南型文件】
“需求开发”需要产出的文档大体上包含【需求规格说明书，需求规格说明书检查表，需求开发指南等】


CMMI分为哪几个等级?
https://zhidao.baidu.com/question/414866048.html
CMMI全称是Capability Maturity Model Integration, 即软件能力成熟度模型集成。
1、初始级：软件过程是无序的，有时甚至是混乱的，对过程几乎没有定义，成功取决于个人努力。管理是反应式的。
2、可管理级：建立了基本的项目管理过程来跟踪费用、进度和功能特性。制定了必要的过程纪律，能重复早先类似应用项目取得的成功经验。
3、已定义级：已将软件管理和工程两方面的过程文档化、标准化，并综合成该组织的标准软件过程。所有项目均使用经批准、剪裁的标准软件过程来开发和维护软件，软件产品的生产在整个软件过程是可见的。
4、量化管理级：分析对软件过程和产品质量的详细度量数据，对软件过程和产品都有定量的理解与控制。管理有一个作出结论的客观依据，管理能够在定量的范围内预测性能。
5、 优化管理级：过程的量化反馈和先进的新思想、新技术促使过程持续不断改进。

能力度等级：属于连续式表述，共有六个能力度等级(0~5)，每个能力度等级对应到一个一般目标，以及一组一般执行方法和特定方法。

--------------------------------------------------------分割线-------------------------------概要设计/详细设计------------------------------------------------
概要设计和详细设计的区别
https://blog.csdn.net/wang15061955806/article/details/50332583/
软件工程中谈到的【模块】是指整个系统中一些相对对独立的程序单元，每个程序单元完成和实现一个相对独立的软件功能。通俗点就是一些独立的程序段。
模块设计也叫详细设计，是系统设计阶段后续的一个软件开发阶段。在系统设计阶段要把整个应用问题分解成一个个独立的功能部分--叫做程序模块。
每个程序模块要有自己的名称、标识符、接口等外部特征。

不过模块的概念，在现代软件工程已经不多使用了，这大概是2代3代之前的概念。模块概念后来发展成【类和对象的概念】，现在又发展到组件的概念。换句话说，现在不再叫模块设计，一般叫【组件设计】。
前些年叫类和对象设计。这些不止是名词的改变，更多的是软件工程的发展。不过对象也好、组件也好它们都是一些独立的程序单元。

软件概要设计-模板
https://www.cnblogs.com/bmaker/p/6116177.html

软件工程之软件概要设计
https://www.cnblogs.com/youcong/p/9500921.html

需求说明书+软件概要设计+软件详细设计
https://www.cnblogs.com/duibd/p/4893235.html

软件详细设计说明书
https://www.cnblogs.com/meihong/p/5575998.html


--------------------------------------------------------分割线-------------------------------------------------------------------------------
一个完整的软件项目开发流程
https://blog.csdn.net/S_king_/article/details/78612905
需求调研/市场调研---->业务梳理/思维导图---->产品原型---->项目开发计划/项目任务分解/UI原型---->需求概要---->需求规格----->概要设计/通讯协议/表结构设计----->产品---->测试用例/测试结果报告/测试周报/用户手册---->上线交付

浅谈UML中常用的几种图——用例图
https://www.cnblogs.com/vathe/p/7349816.html

亿图图示---帮助文档
https://www.edrawsoft.com/cn/how-to-draw-concept-map.php

领域驱动设计到底难在哪？
https://www.jianshu.com/p/ab80cb9f307c?from=groupmessage
领域专家+技术专家-------
